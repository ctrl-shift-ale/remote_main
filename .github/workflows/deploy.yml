name: totesys-ETL

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    name: run-tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            sleep 1
          done
      - name: Connect to database and seed test database
        run: |
          PGPASSWORD=mypassword psql -h localhost -U myuser -d mydatabase -f database/test_db.sql
      - name: Python Init
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.1'
      - name: Run Tests
        run: make all
        env:
          PG_USER: myuser
          PG_PASSWORD: mypassword
          PG_HOST: localhost
          PG_DATABASE: test_totesys
          PG_PORT: 5432
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        run: |
          flake8 src/* test/*
        # uses: suo/flake8-github-action@releases/v1
        # with:
        #   checkName: run-tests   # NOTE: this needs to be the same as the job name
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Echo the repository content
        run: |
          echo "Listing all files in the repository:"
          ls 

  deploy-infrastructure:
    name: deploy-infrastructure
    runs-on: ubuntu-latest
    needs: run-tests
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Python Init
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.1'
      - name: run make
        run: make lambda_requirements
      - name: Echo the repository content
        run: |
          echo "Listing all files in the repository:"
          ls 
      - name: export dev .env
        run: export $(xargs <.env.development)
      - name: Terraform install
        uses: hashicorp/setup-terraform@v3
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Init
        working-directory: terraform
        run: terraform init
      - name: Terraform plan
        working-directory: terraform
        run: >
          TF_VAR_UN=$DB_USERNAME 
          TF_VAR_PW=$DB_PASSWORD 
          TF_VAR_DB=$DB_NAME 
          TF_VAR_HT=$DB_HOST 
          TF_VAR_PT=$DB_PORT 
          terraform plan
      - name: Terraform apply
        working-directory: terraform
        run: >
          TF_VAR_UN=$DB_USERNAME 
          TF_VAR_PW=$DB_PASSWORD 
          TF_VAR_DB=$DB_NAME 
          TF_VAR_HT=$DB_HOST 
          TF_VAR_PT=$DB_PORT 
          terraform apply --auto-approve
